# -*- coding: utf-8 -*-
"""
Author: Jack Bellamy
Date: 07/04/23
Task: Smooth Step Functions
"""

#Modules Used
import matplotlib.pyplot as plt
import math


#A comparison of each smooth step function on the plot (-0.5  < x < 1.5)
def functionComparison():
    
    #List of points generated by each smooth step function
    smoothStepPoints = [] #List for smoothStep(x) 
    smootherStepPoints = [] #List for smootherStep(x)
    inverseSmooth = [] #List for invSmoothStep(x)
    xPoints = [] #List for x values to be used in plot
    
    for x in range(-500,1500):
        x = x / 1000 #Rescale x to be (0 < x < 1)
        
        smoothStepPoints.append(smoothStep(x))
        smootherStepPoints.append(smootherStep(x))
        inverseSmooth.append(invSmoothStep(x))
        xPoints.append(x)
        
    #Graphing of results
    plt.plot(xPoints,smoothStepPoints,c='blue',label='Smooth Step') #Graph for smoothStep(x) 
    plt.plot(xPoints,smootherStepPoints,c='green',label='Smoother Step') #Graph for smootherStep(x)
    plt.plot(xPoints,inverseSmooth,c='red',label='Inverse Smooth Step') #Graph for smootherStep(x)
    plt.title('Comparison of Smooth Step Functions')
    plt.grid()
    plt.legend()
    plt.show()
        
        
#Classic smooth step function
def smoothStep(x):
    
    if x <= 0:
        return 0
    elif x >= 1:
        return 1
    else:
        smooth = (3 * math.pow(x,2)) - (2 * math.pow(x,3)) #Smoothing function
        return smooth
    
    
#Ken Perlin smoother step function
def smootherStep(x):
    
    if x <= 0:
        return 0
    elif x >= 1:
        return 1
    else:
        smooth = (6 * math.pow(x,5)) - (15 * math.pow(x,4)) + + (10 * math.pow(x,3)) #Smoothing function
        return smooth


#Inverse of classic smooth step function
def invSmoothStep(x):
    
    if x <= 0:
        return 0
    elif x >= 1:
        return 1
    else:
        invSmooth = 0.5 - math.sin(math.asin(1 - (2*x)) / 3) #Inverse smoothing function
        return invSmooth
